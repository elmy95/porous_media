/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     icoBoilingFoam;

startFrom      latestTime;

startTime       0;

stopAt          endTime;

endTime         10;

deltaT          1e-9;

writeControl    adjustableRunTime;

writeInterval   0.01;

purgeWrite      0;

writeFormat     ascii;

writePrecision  12;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.01;
maxAlphaCo      0.01;
maxDeltaT       0.01;
maxCapillaryNum 0.5;


functions
{
bubbleVol
      {
          libs ("libutilityFunctionObjects.so");
          type coded;
          name bubbleVol;
          writeControl timeStep;
          writeInterval 1;
          active yes;
          region fluid;
          codeWrite
          #{
               const volScalarField& alpha =
                   mesh().lookupObject<volScalarField>("alpha.vapour");
               scalar bubbleV(0);
               bubbleV = fvc::domainIntegrate(alpha).value();

               if (Pstream::master()){
                  std::ofstream file;
                  file.open ("bubbleInfo.csv", std::ofstream::out | std::ofstream::app);
                  file << mesh().time().value() << " , " << bubbleV <<  std::endl;
                  file.close();
               }
          #};
      }


  freeSurface
  {
    type                      surfaces;
    libs            ("libsampling.so");
    surfaceFormat                  raw;
    region                       fluid;
    fields (
            alpha.liquid
    );
    surfaces
          (
              freeSurface
              {
                  type        isoSurfaceCell;
                  isoField    alpha.liquid;
                  isoValue    0.5;
                  interpolate false;
                  regularise  false;
              }
          );
          interpolationScheme cellPointFace;
      }


      addbubble
      {
          // Mandatory entries (unmodifiable)
          type           bubbleGenerator;
          libs           (boilingFunctionObject);
          active           yes;
          region         fluid;

          // Mandatory entries (runtime modifiable)

          // Submodels
          locationModel    fixedSites;
          activationModel  liquidSuperheatingThreshold;
          nucleationModel  fixedRadius;

          fixTimeStepAfterNucleation true;
          deltaT 1e-9;

          fixedSitesDict
          {
              sites List<vector>
              1
              (
                  (0.9e-3 2.5e-3 0)
              );

          }

          liquidSuperheatingThresholdDict
          {
              Tactivation 373.15;
          }

          fixedRadiusDict
          {
              radius       6e-5;
              imposeT      true;
              radiusT      7e-5;
              internalT    373;
              displacement (0 0 0);
          }

      }
};
// ************************************************************************* //
